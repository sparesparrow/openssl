name: Trigger OpenSSL Tools

# This workflow triggers the openssl-tools repository for complex build orchestration
# Minimal repository - advanced builds handled by openssl-tools

on:
  pull_request:
    paths:
      - '*.c'
      - '*.h'
      - 'crypto/**'
      - 'ssl/**'
      - 'include/**'
      - 'apps/**'
      - 'providers/**'
      - 'engines/**'
      - 'test/**'
      - 'conanfile.py'
      - 'Configure'
      - 'config'
      - 'VERSION.dat'
      - 'demos/**'
      - 'fuzz/**'
  push:
    branches: [main, master]
    paths:
      - '*.c'
      - '*.h'
      - 'crypto/**'
      - 'ssl/**'
      - 'include/**'
      - 'apps/**'
      - 'providers/**'
      - 'engines/**'
      - 'test/**'
      - 'conanfile.py'
      - 'Configure'
      - 'config'
      - 'VERSION.dat'
      - 'demos/**'
      - 'fuzz/**'
  workflow_dispatch:
    inputs:
      build_scope:
        description: 'Build scope (minimal/standard/full)'
        required: false
        default: 'standard'
        type: choice
        options:
          - minimal
          - standard
          - full
      force_full_matrix:
        description: 'Force full build matrix regardless of changes'
        required: false
        default: false
        type: boolean

env:
  TOOLS_REPO: sparesparrow/openssl-tools
  EVENT_TYPE: openssl-build-triggered  # Fixed: match workflow dispatch type
  # Minimal repository - complex orchestration in openssl-tools

jobs:
  analyze-changes:
    name: Analyze Changes and Determine Build Scope
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      build_scope: ${{ steps.scope.outputs.build_scope }}
      changed_files: ${{ steps.scope.outputs.changed_files }}
      should_trigger: ${{ steps.scope.outputs.should_trigger }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Need previous commit for change detection
      
      - name: Analyze changes and determine build scope
        id: scope
        run: |
          echo "🔍 Analyzing changes to determine appropriate build scope..."
          
          # Get changed files
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }})
          elif [ "${{ github.event_name }}" = "push" ]; then
            CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          else
            # workflow_dispatch - use user input or default
            CHANGED_FILES=""
          fi
          
          echo "Changed files:"
          echo "$CHANGED_FILES"
          
          # Determine build scope based on changed files
          BUILD_SCOPE="minimal"
          SHOULD_TRIGGER="true"
          
          # Force full matrix if requested
          if [ "${{ github.event.inputs.force_full_matrix }}" = "true" ]; then
            BUILD_SCOPE="full"
            echo "🚀 Forced full build matrix requested"
          elif [ "${{ github.event.inputs.build_scope }}" != "" ]; then
            BUILD_SCOPE="${{ github.event.inputs.build_scope }}"
            echo "🎯 Manual build scope specified: $BUILD_SCOPE"
          else
            # Auto-determine scope based on changes
            if echo "$CHANGED_FILES" | grep -qE "(crypto/|ssl/|include/openssl/|providers/|engines/).*\.(c|h)$"; then
              BUILD_SCOPE="full"
              echo "🔴 Core cryptographic changes detected - using FULL build scope"
            elif echo "$CHANGED_FILES" | grep -qE "(Configure|config|VERSION\.dat|conanfile\.py)"; then
              BUILD_SCOPE="full" 
              echo "🔴 Build system changes detected - using FULL build scope"
            elif echo "$CHANGED_FILES" | grep -qE "(test/|fuzz/).*\.(c|h)$"; then
              BUILD_SCOPE="standard"
              echo "🟡 Test changes detected - using STANDARD build scope"
            elif echo "$CHANGED_FILES" | grep -qE "(apps/|demos/).*\.(c|h)$"; then
              BUILD_SCOPE="standard"
              echo "🟡 Application changes detected - using STANDARD build scope"
            elif echo "$CHANGED_FILES" | grep -qE "\.(md|txt|yml|yaml)$"; then
              BUILD_SCOPE="minimal"
              echo "🟢 Documentation/config changes only - using MINIMAL build scope"
            fi
          fi
          
          # Skip trigger for pure documentation changes in certain cases
          if [ "$BUILD_SCOPE" = "minimal" ] && echo "$CHANGED_FILES" | grep -qvE "\.(c|h|py)$"; then
            DOC_ONLY_CHANGES=$(echo "$CHANGED_FILES" | grep -v -E "\.(c|h|py)$" | wc -l)
            TOTAL_CHANGES=$(echo "$CHANGED_FILES" | wc -l)
            if [ "$DOC_ONLY_CHANGES" -eq "$TOTAL_CHANGES" ]; then
              echo "📝 Pure documentation changes detected - skipping openssl-tools trigger"
              SHOULD_TRIGGER="false"
            fi
          fi
          
          echo "Final build scope: $BUILD_SCOPE"
          echo "Should trigger openssl-tools: $SHOULD_TRIGGER"
          
          # Set outputs
          echo "build_scope=$BUILD_SCOPE" >> $GITHUB_OUTPUT
          echo "should_trigger=$SHOULD_TRIGGER" >> $GITHUB_OUTPUT
          echo "changed_files<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED_FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  trigger-tools-build:
    name: Trigger OpenSSL Tools Build
    runs-on: ubuntu-latest
    needs: analyze-changes
    if: needs.analyze-changes.outputs.should_trigger == 'true'
    timeout-minutes: 2
    
    steps:
      - name: Prepare trigger payload
        id: payload
        run: |
          # Prepare comprehensive payload for openssl-tools
          cat > payload.json << EOF
          {
            "event_type": "$EVENT_TYPE",
            "client_payload": {
              "source_repo": "${{ github.repository }}",
              "ref": "${{ github.ref }}",
              "sha": "${{ github.sha }}",
              "build_scope": "${{ needs.analyze-changes.outputs.build_scope }}",
              "trigger_event": "${{ github.event_name }}",
              "pr_number": "${{ github.event.pull_request.number || '' }}",
            "pr_title": "${{ github.event.pull_request.title || '' }}",
              "author": "${{ github.actor }}",
              "changed_files": "${{ needs.analyze-changes.outputs.changed_files }}",
            "workflow_run_id": "${{ github.run_id }}",
              "repository_url": "${{ github.event.repository.html_url }}",
              "compare_url": "${{ github.event.pull_request.html_url || '' }}",
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
            }
          }
          EOF
          
          echo "📋 Trigger payload prepared:"
          cat payload.json | jq '.'
      
      - name: Trigger openssl-tools repository
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🚀 Triggering openssl-tools build..."
          echo "Repository: $TOOLS_REPO"  
          echo "Event Type: $EVENT_TYPE"
          echo "Build Scope: ${{ needs.analyze-changes.outputs.build_scope }}"
          
          # Trigger repository dispatch
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/$TOOLS_REPO/dispatches" \
            -d @payload.json
          
          if [ $? -eq 0 ]; then
            echo "✅ Successfully triggered openssl-tools build"
          else
            echo "❌ Failed to trigger openssl-tools build"
            exit 1
          fi
      
      - name: Create check run
        if: github.event_name == 'pull_request'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create a check run to track openssl-tools build status
          CHECK_RUN_ID=$(curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/check-runs" \
            -d '{
              "name": "OpenSSL Tools Build",
              "head_sha": "${{ github.sha }}",
              "status": "in_progress",
              "details_url": "https://github.com/'$TOOLS_REPO'/actions",
              "output": {
                "title": "Build triggered in openssl-tools",
                "summary": "OpenSSL build orchestration started in openssl-tools repository",
                "text": "Build scope: ${{ needs.analyze-changes.outputs.build_scope }}\nMonitor progress at: https://github.com/'$TOOLS_REPO'/actions"
              }
            }' | jq -r '.id')
          
          echo "✅ Created check run: $CHECK_RUN_ID"
          echo "CHECK_RUN_ID=$CHECK_RUN_ID" >> $GITHUB_ENV
      
      - name: Summary
        run: |
          cat >> $GITHUB_STEP_SUMMARY << EOF
          ## 🚀 OpenSSL Tools Build Triggered
          
          ### Build Configuration
          - **Repository:** \`$TOOLS_REPO\`
          - **Build Scope:** \`${{ needs.analyze-changes.outputs.build_scope }}\`
          - **Trigger Event:** \`${{ github.event_name }}\`
          - **Source SHA:** \`${{ github.sha }}\`
          
          ### Changed Files Analysis
          Build scope was determined based on the following changes:
          \`\`\`
          ${{ needs.analyze-changes.outputs.changed_files }}
          \`\`\`
          
          ### Next Steps
          1. 🔍 **Monitor build progress** at: https://github.com/$TOOLS_REPO/actions
          2. 📊 **Build results** will be reported back to this PR/commit
          3. ⏱️ **Estimated time:** 30-60 minutes depending on build scope
          
          ### Build Scope Explanation
          - **minimal**: Basic validation only (docs, config changes)
          - **standard**: Standard matrix (app, test changes) 
          - **full**: Complete matrix (core crypto, build system changes)
          EOF

  skip-trigger:
    name: Skipped - No Build Required
    runs-on: ubuntu-latest
    needs: analyze-changes
    if: needs.analyze-changes.outputs.should_trigger == 'false'
    timeout-minutes: 1
    
    steps:
      - name: Skip summary
        run: |
          cat >> $GITHUB_STEP_SUMMARY << EOF
          ## ⏭️ OpenSSL Tools Build - SKIPPED
          
          ### Reason
          Changes detected do not require full build orchestration.
          
          ### Changed Files
          \`\`\`
          ${{ needs.analyze-changes.outputs.changed_files }}
          \`\`\`
          
          ### Change Analysis
          - Pure documentation or configuration changes
          - No source code modifications that affect OpenSSL functionality
          - Basic validation in this repository is sufficient
          
          ### Manual Override
          If you need to force a build despite these changes:
          1. Go to Actions tab
          2. Run "Trigger OpenSSL Tools" workflow manually
          3. Select desired build scope
          EOF