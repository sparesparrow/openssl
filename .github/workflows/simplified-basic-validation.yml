name: Simplified Basic Validation

on:
  push:
    branches: [ main, master ]
    paths:
      - 'conanfile.py'
      - 'VERSION.dat'
      - 'crypto/**'
      - 'ssl/**'
      - 'apps/**'
      - 'include/**'
      - 'config'
      - 'Configure'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'conanfile.py'
      - 'VERSION.dat'
      - 'crypto/**'
      - 'ssl/**'
      - 'apps/**'
      - 'include/**'
      - 'config'
      - 'Configure'
  workflow_dispatch:

jobs:
  basic-validation:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout OpenSSL source
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'
      
      - name: Install Conan
        run: |
          pip install conan>=2.0
          conan --version
      
      - name: Validate VERSION.dat
        run: |
          echo "üîç Validating VERSION.dat..."
          if [ -f "VERSION.dat" ]; then
            echo "‚úÖ VERSION.dat found"
            head -5 VERSION.dat
          else
            echo "‚ùå VERSION.dat missing"
            exit 1
          fi
      
      - name: Validate OpenSSL structure
        run: |
          echo "üîç Validating OpenSSL source structure..."
          
          # Check for configure script
          if [ -f "config" ] || [ -f "Configure" ]; then
            echo "‚úÖ Configure script found"
          else
            echo "‚ùå Configure script missing"
            exit 1
          fi
          
          # Check for essential directories
          for dir in crypto ssl apps include; do
            if [ -d "$dir" ]; then
              echo "‚úÖ $dir directory found"
            else
              echo "‚ùå $dir directory missing"
              exit 1
            fi
          done
      
      - name: Test conanfile.py syntax
        run: |
          echo "üîß Testing conanfile.py syntax..."
          python3 -c "
          import sys
          sys.path.insert(0, '.')
          
          try:
              from conanfile import OpenSSLConan
              print('‚úÖ conanfile.py imports successfully')
              
              conan = OpenSSLConan()
              conan.recipe_folder = '.'
              
              # Test version detection
              conan.set_version()
              print(f'‚úÖ Version detection works: {conan.version}')
              
              # Test basic configuration
              conan.configure()
              print('‚úÖ Basic configuration works')
              
          except Exception as e:
              print(f'‚ùå conanfile.py test failed: {e}')
              import traceback
              traceback.print_exc()
              sys.exit(1)
          "
      
      - name: Test openssl-tools integration readiness
        run: |
          echo "üîó Testing openssl-tools integration readiness..."
          
          # Test that we can import the conanfile
          python3 -c "
          import sys
          sys.path.insert(0, '.')
          
          try:
              from conanfile import OpenSSLConan
              conan = OpenSSLConan()
              conan.recipe_folder = '.'
              conan.set_version()
              conan.configure()
              
              print('‚úÖ OpenSSL repository ready for openssl-tools integration')
              print(f'‚úÖ OpenSSL version: {conan.version}')
              print('‚úÖ conanfile.py compatible with openssl-tools')
              
          except Exception as e:
              print(f'‚ùå Integration readiness test failed: {e}')
              sys.exit(1)
          "
      
      - name: Validation summary
        run: |
          echo "üéâ Basic validation completed successfully!"
          echo "‚úÖ VERSION.dat present and readable"
          echo "‚úÖ OpenSSL source structure valid"
          echo "‚úÖ conanfile.py syntax correct"
          echo "‚úÖ Ready for openssl-tools integration"
          echo "üìù Next: Test with openssl-tools basic-openssl-integration workflow"
