name: Basic Validation

on:
  pull_request:
    paths:
      - '*.py'
      - '*.yml'
      - '*.yaml'
      - 'conanfile*.py'
      - 'VERSION.dat'
      - 'Configure'
      - 'config'
      - '.github/workflows/**'
      - 'conan-profiles/**'
      - 'test_package/**'
  push:
    branches: [main, master, openssl-3.*]
    paths:
      - '*.py'
      - '*.yml'
      - '*.yaml'
      - 'conanfile*.py'
      - 'VERSION.dat'
      - 'Configure'
      - 'config'
      - '.github/workflows/**'
      - 'conan-profiles/**'
      - 'test_package/**'
  workflow_dispatch:

jobs:
  syntax-validation:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'
      
      - name: Install dependencies
        run: |
          pip install conan>=2.0
          pip install pyyaml
      
      - name: Validate conanfile.py syntax
        run: |
          echo "üîç Validating conanfile.py syntax..."
          if [ ! -f "conanfile.py" ]; then
            echo "‚ùå conanfile.py not found"
            exit 1
          fi
          
          python -m py_compile conanfile.py
          if [ $? -eq 0 ]; then
            echo "‚úÖ conanfile.py syntax is valid"
          else
            echo "‚ùå conanfile.py syntax validation failed"
            exit 1
          fi
      
      - name: Validate YAML files
        run: |
          python -c "
          import yaml
          import sys
          import glob
          
          yaml_files = glob.glob('**/*.yml', recursive=True) + glob.glob('**/*.yaml', recursive=True)
          
          for file in yaml_files:
              try:
                  with open(file, 'r') as f:
                      yaml.safe_load(f)
                  print(f'‚úÖ {file} is valid YAML')
              except yaml.YAMLError as e:
                  print(f'‚ùå {file} has YAML syntax error: {e}')
                  sys.exit(1)
          "
      
      - name: Validate VERSION.dat
        run: |
          if [ ! -f "VERSION.dat" ]; then
            echo "‚ùå VERSION.dat not found"
            exit 1
          fi
          
          # Check for required fields
          if ! grep -q "MAJOR=" VERSION.dat; then
            echo "‚ùå VERSION.dat missing MAJOR field"
            exit 1
          fi
          
          if ! grep -q "MINOR=" VERSION.dat; then
            echo "‚ùå VERSION.dat missing MINOR field"
            exit 1
          fi
          
          if ! grep -q "PATCH=" VERSION.dat; then
            echo "‚ùå VERSION.dat missing PATCH field"
            exit 1
          fi
          
          echo "‚úÖ VERSION.dat is valid"
      
      - name: Test conanfile.py basic functionality
        run: python scripts/validate_conanfile.py

  conan-validation:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          pip install conan>=2.0
          pip install pyyaml
      
      - name: Validate conanfile.py
        run: |
          echo "Validating conanfile.py..."
          conan inspect . --format=json
          echo "‚úÖ Conanfile validation passed"
      
      - name: Validate Conan profiles
        run: |
          echo "Validating Conan profiles..."
          for profile in conan-profiles/*.profile; do
            echo "Validating $profile"
            conan profile show --profile="$profile" || echo "Profile $profile validation failed"
          done
          echo "‚úÖ Conan profiles validation passed"

  workflow-validation:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Validate GitHub Actions workflows
        run: |
          # Check for required workflows
          if [ ! -f ".github/workflows/trigger-openssl-tools.yml" ]; then
            echo "‚ùå Missing trigger-openssl-tools.yml workflow"
            exit 1
          fi
          
          if [ ! -f ".github/workflows/basic-validation.yml" ]; then
            echo "‚ùå Missing basic-validation.yml workflow"
            exit 1
          fi
          
          echo "‚úÖ Required workflows are present"
      
      - name: Check workflow syntax
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const yaml = require('js-yaml');
            
            const workflowFiles = [
              '.github/workflows/trigger-openssl-tools.yml',
              '.github/workflows/basic-validation.yml'
            ];
            
            for (const file of workflowFiles) {
              if (fs.existsSync(file)) {
                try {
                  const content = fs.readFileSync(file, 'utf8');
                  yaml.load(content);
                  console.log(`‚úÖ ${file} has valid YAML syntax`);
                } catch (error) {
                  console.log(`‚ùå ${file} has invalid YAML syntax: ${error.message}`);
                  process.exit(1);
                }
              }
            }

  repository-structure:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Validate minimal repository structure
        run: |
          echo "üîç Validating minimal repository structure..."
          
          # Required files
          required_files=(
            "conanfile.py"
            "VERSION.dat"
            "Configure"
            "config"
            ".github/workflows/trigger-openssl-tools.yml"
            ".github/workflows/basic-validation.yml"
          )
          
          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "‚ùå Missing required file: $file"
              exit 1
            else
              echo "‚úÖ Found: $file"
            fi
          done
          
          # Check for conan-profiles directory
          if [ ! -d "conan-profiles" ]; then
            echo "‚ùå Missing conan-profiles directory"
            exit 1
          else
            echo "‚úÖ Found: conan-profiles directory"
          fi
          
          # Check that complex orchestration files are NOT present
          # (they should be moved to openssl-tools)
          forbidden_paths=(
            "scripts/conan/conan_orchestrator.py"
            "scripts/ci/conan_automation.py"
            "conan-dev/"
            "scripts/openssl_conan/"
            "openssl-tools-workflows/"
          )
          
          for path in "${forbidden_paths[@]}"; do
            if [ -e "$path" ]; then
              echo "‚ö†Ô∏è  Found orchestration file that should be in openssl-tools: $path"
              echo "   Migration status: Some files may still be present during transition"
            fi
          done
          
          echo "‚úÖ Repository structure validation complete"